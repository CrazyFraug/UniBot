unibot.ui.add_comment=ajouter un commentaire
unibot.ui.clone=cloner
unibot.ui.delete_comment=supprimer un commentaire
unibot.ui.load=ouvrir
unibot.ui.organize_blocks=organiser tous les blocs
unibot.ui.save=enregistrer
unibot.ui.upload=transf\u00e9rer
unibot.file.suffix=unibot Program File(*.abp)
unibot.libraryloader.suffix=C++ Header File(*.h)
unibot.file.suffix=Fichier unibot (*.abp)
unibot.libraryloader.suffix=C++ Header File(*.h)
unibot.translator.exception.multipleLoopFound=trop de boucles principales!
unibot.translator.exception.noLoopFound=boucle principale manquante!
unibot.translator.exception.noSetupFound=initialisation manquante!
unibot.translator.exception.socketNull=element manquant!
unibot.translator.exception.subroutineNameDuplicated=au moins deux fonctions ont le meme nom!
unibot.translator.exception.subroutineNotDeclared=fonction non déclarée
unibot.translator.exception.title=erreur d'agencement de blocs
unibot.translator.exception.blockErrorCompile=Un ou plusieurs blocs ont un connecteur manquant, verifiez la liste:
bc.angle=angle
bc.base=base
bc.condition=si
bc.do=faire
bc.delay=ms
bc.else=sinon
bc.exponent=exposant
bc.frequency=fr\u00e9quence
bc.from=fourchette de valeur actuelle
bc.function=
bc.level=niveau
bc.max=nombre max
bc.microseconds=us
bc.milliseconds=ms
bc.number=nombre
bc.pin_number=broche\#
bc.status=statut
bc.string=texte
bc.test=si
bc.then=alors
bc.times=fois
bc.to=nouvelle fourchette de valeurs
bc.type_boolean=boolean
bc.type_float=float
bc.type_int=int
bc.type_string=string
bc.type_char=char
bc.type_byte=byte
bc.type_long=long
bc.type_double=double
bc.value==
bc.variable=nom
bc.while=tant que
bd.control=M\u00e9thodes
bd.number=variables/Constantes
bd.operators=operateurs Math
bd.pins=broches
bd.loopAndFunction=boucles et methodes
bd.operations=operations
bd.tests=tests et conditions
bd.variables=variables
bd.time=temps
bd.utilities=utilitaires
bg.abs=abs
bg.addition=+
bg.addText=+
bg.and=ET
bg.byte=B00000000
bg.callBoReturnNumber=
bg.cast_int=(int)<--
bg.cast_float=(float)<--
bg.cast_long=(long)<--
bg.cast_double=(double)<--
bg.char=a
bg.cos=cos
bg.couple=,
bg.declareData=déclaration des variables
bg.declare_variable_digital=nouveau bool\u00e9en
bg.declare_variable_number_float=nouveau nombre flottant
bg.declare_variable_number_int=nouveau nombre entier
bg.declare_variable_string=nouveau texte
bg.declare_variable_byte=nouveau byte (octet)
bg.declare_variable_char=nouveau char
bg.declare_variable_number_long=nouveau entier long
bg.declare_variable_number_double=nouveau grand flottant
bg.delay_microseconds=
bg.delay=
bg.image=
bg.digital-high=HAUT
bg.digital-low=BAS
bg.digital-off=Eteint
bg.digital-on=Allum\u00e9
bg.division=\u00f7
bg.equal\=\==\=\=
bg.false=FAUX
bg.glue_sb=coller
bg.glue_sn=coller
bg.greater_equal=>\=
bg.greater=>
bg.if=
bg.ifelse=
bg.less_equal=<\=
bg.less=<
bg.long=123456789
bg.loop=boucle principale
bg.map_common=r\u00e9\u00e9talonne de [0 \u00e0 1023] en [0 \u00e0 255]
bg.map=r\u00e9\u00e9talonne...
bg.max=max
bg.message=texte
bg.millis=temps depuis le d\u00e9marrage de la carte (millis)
bg.min=min
bg.modulo=%
bg.multiplication=x
bg.not_equal=\!\=
bg.not=NON
bg.number_to_string="123" <- 123
bg.number_float=1.0
bg.number-int=1
bg.number-double=235;
bg.number-long=123456789;
bg.object=
bg.or=OU
bg.pin-read-analog=valeur de la broche Entree Analogique
bg.pin-read-analog2=yoyo yoyo
bg.pin-read-digital=valeur de la broche Entree num\u00e9rique
bg.pin-write-analog=fixe la sortie analogique \u00e0 la valeur \: 
bg.pin-write-digital=fixe la sortie num\u00e9rique au niveau
bg.pow=puissance
bg.random=nombre al\u00e9atoire
bg.repeat_times=r\u00e9p\u00e8ter
bg.repeat_delay=r\u00e9p\u00e8ter pendant N ms
bg.serial_println=affiche
bg.serial_println_number=affiche
bg.servo=Servomoteur
bg.setter_variable_digital==
bg.setter_variable_number==
bg.setter_variable_string==
bg.setter_variable_char==
bg.setter_variable_byte==
bg.setter_variable_long==
bg.setter_variable_object==
bg.setupData=initialisation
bg.sin=sin
bg.sqrt=racine carr\u00e9e
bg.string=salut
bg.subroutine=créer un bloc
bg.subroutine-ref=appeler le bloc
bg.subtraction=-
bg.tan=tan
bg.true=VRAI
bg.ultrasonic=Capteur Ultrason
bg.boolean=isOk

bg.variable_boolean=isOk
bg.variable_object=objet
bg.variable_object2=autreObjet
bg.variable_number=compteur
bg.variable_number_float=flottant
bg.variable_number_long=grandEntier
bg.variable_number_double=grandFlottant
bg.variable_string=message
bg.variable_char=caractere
bg.variable_byte=unOctet
bg.variable_long=grandEntier
bg.variable_double=grandFlottant
bg.while=
bm.left=gauche
bm.right=droite
message.content.open_unsaved=Votre programme UniBot a chang\u00e9, voulez-vous l'enregistrer ?
message.content.overwrite=Voulez-vous \u00e9craser le fichier existant ?
message.file_not_found=Fichier non trouv\u00e9 ou autorisation refus\u00e9e
message.title.error=Erreur
message.title.question=Question
