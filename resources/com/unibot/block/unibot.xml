<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE BlockLangDef SYSTEM "lang_def.dtd">
<!-- This describes every BlockGenus, BlockDrawer, BlockFamilies in Starlogo-TNG. 
	Note: For BlockGenus, if genus A relies on another genus B, that genus B 
	must be specified in the xml file before genus A is specified./ We impose 
	this requirement so that sanity checks can be made regarding the validity 
	of a default argument when the BlockGenuses are first loaded. -->
<BlockLangDef>

	<BlockConnectorShapes>
		<BlockConnectorShape shape-type="number"
			shape-number="1" />
		<BlockConnectorShape shape-type="number-list"
			shape-number="2" />
		<BlockConnectorShape shape-type="number-inv"
			shape-number="3" />
		<BlockConnectorShape shape-type="boolean"
			shape-number="4" />
		<BlockConnectorShape shape-type="boolean-list"
			shape-number="5" />
		<BlockConnectorShape shape-type="boolean-inv"
			shape-number="6" />
		<BlockConnectorShape shape-type="string"
			shape-number="7" />
		<BlockConnectorShape shape-type="string-list"
			shape-number="8" />
		<BlockConnectorShape shape-type="string-inv"
			shape-number="9" />
		<BlockConnectorShape shape-type="poly"
			shape-number="10" />
		<BlockConnectorShape shape-type="poly-list"
			shape-number="11" />
		<BlockConnectorShape shape-type="poly-inv"
			shape-number="12" />
		<BlockConnectorShape shape-type="proc-param"
			shape-number="13" />
		<BlockConnectorShape shape-type="cmd"
			shape-number="14" />
		<BlockConnectorShape shape-type="robot"
			shape-number="15" />
	</BlockConnectorShapes>

	<BlockGenuses>
		<!-- constantes et variables TYPE -> CONNECTEUR char -> string long/float/int/double 
			-> number byte -> boolean-list bool -> boolean string -> string-list -->
		<BlockGenus name="char" kind="data" color="0 184 255"
			initlabel="bg.char" editable-label="yes">
			<description>
				<text>valeur de type char</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_char" kind="data" initlabel="bg.variable_char"
			editable-label="yes" is-label-value="yes" color="0 71 255">
			<description>
				<text>
					variable de type texte
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_char" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_char">
			<description>
				<text>declare une nouvelle variable de type char</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="socket" label="bc.type_char" position-type="single">
					<DefaultArg genus-name="variable_char" label="bg.variable_char" />
				</BlockConnector>
				<BlockConnector connector-type="string"
					connector-kind="socket" label="bc.value" position-type="single">
					<DefaultArg genus-name="char" label="c" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_char" kind="command"
			color="35 0 220" initlabel="bg.setter_variable_char">
			<description>
				<text>affecte la valeur a la variable</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="socket" position-type="bottom">
					<DefaultArg genus-name="variable_char" label="bg.variable_char" />
				</BlockConnector>
				<BlockConnector connector-type="string"
					connector-kind="socket" position-type="single">
					<DefaultArg genus-name="char" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>


		<BlockGenus name="byte" kind="data" color="0 184 255"
			initlabel="bg.byte" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="boolean-list"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_byte" kind="data" initlabel="bg.variable_byte"
			editable-label="yes" is-label-value="yes" color="0 71 255">
			<description>
				<text>
					Digital Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean-list"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_byte" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_byte">
			<description>
				<text>declare une nouvelle variable de type byte</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean-list"
					connector-kind="socket" label="bc.type_byte" position-type="single">
					<DefaultArg genus-name="variable_byte" label="bg.variable_byte" />
				</BlockConnector>
				<BlockConnector connector-type="boolean-list"
					connector-kind="socket" label="bc.value" position-type="single">
					<DefaultArg genus-name="byte" label="bg.byte" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_byte" kind="command"
			color="35 0 220" initlabel="bg.setter_variable_byte">
			<description>
				<text>affecte la valeur a la variable (ex: B1011, 54)</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean-list"
					connector-kind="socket" position-type="bottom">
					<DefaultArg genus-name="variable_byte" label="bg.variable_byte" />
				</BlockConnector>
				<BlockConnector connector-type="boolean-list"
					connector-kind="socket" position-type="single">
					<DefaultArg genus-name="byte" label="bg.byte" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="string" kind="data" color="0 184 255"
			initlabel="bg.string" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="string-list"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_string" kind="data"
			initlabel="bg.variable_string" editable-label="yes" is-label-value="yes"
			color="0 71 255">
			<description>
				<text>
					variable de type texte
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string-list"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_string" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_string">
			<description>
				<text>declare une nouvelle variable de type texte</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string-list"
					connector-kind="socket" label="bc.type_string" position-type="single">
					<DefaultArg genus-name="variable_string" label="bg.variable_string" />
				</BlockConnector>
				<BlockConnector connector-type="string-list"
					connector-kind="socket" label="bc.value" position-type="single">
					<DefaultArg genus-name="string" label="bg.string" />
				</BlockConnector>

			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_string" kind="command"
			color="35 0 220" initlabel="bg.setter_variable_string">
			<description>
				<text>affecte le texte Ã  la variable</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="bottom">
					<DefaultArg genus-name="variable_string" label="bg.variable_string" />
				</BlockConnector>
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single">
					<DefaultArg genus-name="string" label="bg.string" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="number" kind="data" color="0 184 255"
			initlabel="bg.number" editable-label="yes">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_number" kind="data"
			initlabel="bg.variable_number" editable-label="yes" is-label-value="yes"
			color="0 71 255">
			<description>
				<text>
					Digital Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_number_long" kind="data"
			initlabel="bg.variable_number_long" editable-label="yes"
			is-label-value="yes" color="0 71 255">
			<description>
				<text>
					Digital Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_number_float" kind="data"
			initlabel="bg.variable_number_float" editable-label="yes"
			is-label-value="yes" color="0 71 255">
			<description>
				<text>
					Digital Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_number_double" kind="data"
			initlabel="bg.variable_number_double" editable-label="yes"
			is-label-value="yes" color="0 71 255">
			<description>
				<text>
					Digital Var
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_number_int" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_number_int">
			<description>
				<text>declare une variable numerique entiere</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.type_int">
					<DefaultArg genus-name="variable_number" label="bg.variable_number" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" label="bc.value">
					<DefaultArg genus-name="number" label="bg.number" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_number_float" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_number_float"
			label-unique="no">
			<description>
				<text>declare une variable numerique a virgule</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.type_float">
					<DefaultArg genus-name="variable_number_float" label="bg.variable_number_float" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" label="bc.value">
					<DefaultArg genus-name="number" label="bg.number_float" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_number_long" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_number_long"
			label-unique="no">
			<description>
				<text>declare un grand entier</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.type_long">
					<DefaultArg genus-name="variable_number_long" label="bg.variable_number_long" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" label="bc.value">
					<DefaultArg genus-name="number" label="bg.number_float" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_number_double" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_number_double"
			label-unique="no">
			<description>
				<text>declare une variable numerique a virgule</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.type_double">
					<DefaultArg genus-name="variable_number_double" label="bg.variable_number_double" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" label="bc.value">
					<DefaultArg genus-name="number" label="bg.number_double" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_number" kind="command"
			color="35 0 220" initlabel="bg.setter_variable_number">
			<description>
				<text>affecte la valeur a la variable</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="bottom">
					<DefaultArg genus-name="variable_number" label="bg.variable_number" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single">
					<DefaultArg genus-name="number" label="bg.number" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="digital-high" kind="data" color="0 184 255"
			initlabel="bg.digital-high">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="digital-low" kind="data" color="0 184 255"
			initlabel="bg.digital-low">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="digital-on" kind="data" color="0 184 255"
			initlabel="bg.digital-on">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="digital-off" kind="data" color="0 184 255"
			initlabel="bg.digital-off">
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="true" kind="data" initlabel="bg.true"
			color="0 184 255">
			<description>
				<text>
					VRAI.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"
					position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="false" kind="data" initlabel="bg.false"
			color="0 184 255">
			<description>
				<text>
					FAUX.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean"
					position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="variable_digital" kind="data"
			initlabel="bg.variable_digital" editable-label="yes" is-label-value="yes"
			color="0 71 255">
			<description>
				<text>
					variable de type booleen
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="declare_variable_digital" kind="command"
			color="94 17 166" initlabel="bg.declare_variable_digital">
			<description>
				<text>declare un nouveau booleen</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="socket" label="bc.type_boolean">
					<DefaultArg genus-name="variable_digital" label="mybool" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="false" label="FAUX" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setter_variable_digital" kind="command"
			color="35 0 220" initlabel="bg.setter_variable_digital">
			<description>
				<text>affecte la valeur a la variable</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="socket" position-type="bottom">
					<DefaultArg genus-name="variable_digital" label="bg.variable_digital" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="socket" position-type="single">
					<DefaultArg genus-name="true" label="VRAI" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="message" kind="data" color="0 184 255"
			initlabel="bg.message" editable-label="yes">
			<description>
				<text>texte</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" />
				<BlockConnector connector-type="string"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="glue_sn" kind="data" color="127 127 127"
			initlabel="bg.glue_sn">
			<description>
				<text>ajouter le nombre en fin de texte</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="glue_sb" kind="data" color="127 127 127"
			initlabel="bg.glue_sb">
			<description>
				<text>ajouter le booleen en fin de texte</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="plug" />
				<BlockConnector connector-type="boolean"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<!-- Basic arduino -->

		<BlockGenus name="declareData" kind="command" color="235 97 61"
			initlabel="bg.declareData" is-starter="yes" is-terminator="yes"
			label-unique="yes" editable-label="yes">
			<description>
				<text>declaration des donnÃ©es</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="setupData" kind="command" color="235 57 61"
			initlabel="bg.setupData" is-starter="yes" is-terminator="yes"
			label-unique="yes" editable-label="yes">
			<description>
				<text>initialisation des donnÃ©es</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="loop" kind="command" color="255 51 102"
			initlabel="bg.loop" is-starter="yes" is-terminator="yes"
			label-unique="yes">
			<description>
				<text>boucle principale arduino loop()</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="cmd" connector-kind="socket"
					label="" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-read-digital" kind="data" color="77 191 169"
			initlabel="bg.pin-read-digital">
			<description>
				<text>lit la valeur de l'entree digitale</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="#">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-read-analog" kind="data" color="77 191 169"
			initlabel="bg.pin-read-analog">
			<description>
				<text>lit la valeur de l'entree analogique</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="#">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pin-write-digital" kind="command" color="77 191 169"
			initlabel="bg.pin-write-digital">
			<description>
				<text>ecrit sur la sortie numerique</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="#">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="boolean"
					connector-kind="socket">
					<DefaultArg genus-name="digital-high" label="HIGH" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="delay" kind="command" color="153 153 153"
			initlabel="bg.delay">
			<description>
				<text>pause du programme en millisecondes toto</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.milliseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
			<Images>
				<Image block-location="center">
					<FileLocation>com/unibot/block/dessinChrono.png</FileLocation>
				</Image>
			</Images>
		</BlockGenus>




		<BlockGenus name="if" kind="command" initlabel="bg.if"
			color="230 255 0">
			<description>
				<text>
					si la condition est vraie, alors les instructions seront
					executÃ©es
				</text>
				<arg-description n="1" name="test">
					la condition testee.
				</arg-description>

				<arg-description n="2" name="then">
					les instructions
					executÃ©es si la condition est vraie.
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.test" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="bc.then" connector-kind="socket"
					connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="ifelse" kind="command" initlabel="bg.ifelse"
			color="230 255 0">
			<description>
				<text>
					si la condition est vraie, alors le premier jeu d'instructions
					sera executÃ©, sinon ce sera le deuxieme
				</text>
				<arg-description n="1" name="test">
					la condition testee.
				</arg-description>

				<arg-description n="2" name="then">
					le jeu d'instructions
					executÃ©es si la condition est vraie.
				</arg-description>

				<arg-description n="3" name="else">
					le jeu d'instructions
					Ã©xÃ©cutÃ©es si la condition est fausse
				</arg-description>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.test" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="bc.then" connector-kind="socket"
					connector-type="cmd" />
				<BlockConnector label="bc.else" connector-kind="socket"
					connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="while" kind="command" initlabel="bg.while"
			color="230 255 0">
			<description>
				<text>
					tant que la condition est vraie, execute le jeu d'instructions
					suivant
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="bc.while" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="bc.do" connector-kind="socket"
					connector-type="cmd" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="repeat_times" kind="command" color="230 255 0"
			initlabel="bg.repeat_times">
			<description>
				<text>repeter plusieurs fois</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.times">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
				<BlockConnector connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="repeat_delay" kind="command" color="230 255 0"
			initlabel="bg.repeat_delay">
			<description>
				<text>repeter plusieurs fois pendant un temps donnÃ©</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.delay">
					<DefaultArg genus-name="number" label="5" />
				</BlockConnector>
				<BlockConnector connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine" kind="command" color="153 40 76"
			initlabel="bg.subroutine" is-starter="yes" is-terminator="yes"
			label-unique="no" editable-label="yes">
			<description>
				<text>fonction</text>
			</description>
			<BlockConnectors>

				<BlockConnector connector-type="string"
					connector-kind="socket">
					<DefaultArg genus-name="string" label="mon_bloc" />
				</BlockConnector>
				<BlockConnector connector-type="cmd" connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subroutine-ref" kind="command" color="153 40 76"
			initlabel="bg.subroutine" editable-label="yes">
			<description>
				<text>appel d'execution de la fonction </text>
			</description>
		</BlockGenus>

		<!-- operator logic -->
		<BlockGenus name="and" kind="data" initlabel="bg.and"
			color="61 235 61">
			<description>
				<text>
					renvoie VRAI si les deux conditions sont vraies.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="couple" kind="function" initlabel="bg.couple"
			color="61 235 61">
			<description>
				<text>
					couple de valeurs numeriques
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number-list"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single">
					<DefaultArg genus-name="number" label="1" />

				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="or" kind="data" initlabel="bg.or" color="61 235 61">
			<description>
				<text>
					renvoie FAUX si aucune des deux conditions n'est vraie, sinon
					renvoie VRAI
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not" kind="function" initlabel="bg.not"
			color="61 235 61">
			<description>
				<text>
					renvoie l'inverse (VRAI -> FAUX)
					<arg n="1" />
					.
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-kind="plug" connector-type="boolean" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="boolean" />
			</BlockConnectors>
		</BlockGenus>

		<!-- Math -->
		<BlockGenus name="addition" kind="function" initlabel="bg.addition"
			color="51 204 102">
			<description>
				<text>
					renvoie la somme de (
					<arg n="1" />
					+
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="subtraction" kind="function" initlabel="bg.subtraction"
			color="51 204 102">
			<description>
				<text>
					renvoie la difference de (
					<arg n="1" />
					-
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="multiplication" kind="function"
			initlabel="bg.multiplication" color="51 204 102">
			<description>
				<text>
					renvoie la multiplication de (
					<arg n="1" />
					x
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="division" kind="function" initlabel="bg.division"
			color="51 204 102">
			<description>
				<text>
					renvoie la division de (
					<arg n="1" />
					Ã·
					<arg n="2" />
					).
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="modulo" kind="function" color="51 204 102"
			initlabel="bg.modulo">
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="number" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="number" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="min" kind="function" color="51 204 102"
			initlabel="bg.min">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="max" kind="function" color="51 204 102"
			initlabel="bg.max">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="abs" kind="function" color="0 174 0"
			initlabel="bg.abs">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="pow" kind="function" color="0 174 0"
			initlabel="bg.pow">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.base" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.exponent" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sqrt" kind="function" color="0 174 0"
			initlabel="bg.sqrt">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="sin" kind="function" color="0 174 0"
			initlabel="bg.sin">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cos" kind="function" color="0 174 0"
			initlabel="bg.cos">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="tan" kind="function" color="0 174 0"
			initlabel="bg.tan">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="cast_int" kind="function" color="0 174 0"
			initlabel="bg.cast_int">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_float" kind="function" color="0 174 0"
			initlabel="bg.cast_float">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_long" kind="function" color="0 174 0"
			initlabel="bg.cast_long">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="cast_double" kind="function" color="0 174 0"
			initlabel="bg.cast_double">
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" />
			</BlockConnectors>
		</BlockGenus>

		<BlockGenus name="greater" kind="function" color="255 255 102"
			initlabel="bg.greater">
			<description>
				<text>est strictement plus grand ?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="greaterS" kind="function" color="255 255 102"
			initlabel="bg.greater">
			<description>
				<text>est strictement plus grand ?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="greaterP" kind="function" color="255 255 102"
			initlabel="bg.greater">
			<description>
				<text>est strictement plus grand ?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="less" kind="function" color="255 255 102"
			initlabel="bg.less">
			<description>
				<text>est strictement plus petit?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="lessS" kind="function" color="255 255 102"
			initlabel="bg.less">
			<description>
				<text>est strictement plus petit?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="lessP" kind="function" color="255 255 102"
			initlabel="bg.less">
			<description>
				<text>est strictement plus petit?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="equal" kind="function" color="255 255 102"
			initlabel="bg.equal">
			<description>
				<text>ont la meme valeur?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="equalB" kind="function" color="255 255 102"
			initlabel="bg.equal">
			<description>
				<text>ont la meme valeur?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="boolean"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="boolean"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="equalS" kind="function" color="255 255 102"
			initlabel="bg.equal">
			<description>
				<text>ont la meme valeur?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="equalP" kind="function" color="255 255 102"
			initlabel="bg.equal">
			<description>
				<text>ont la meme valeur?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="greater_equal" kind="function" color="255 255 102"
			initlabel="bg.greater_equal">
			<description>
				<text>est plus grand ou egale?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="greater_equalS" kind="function" color="255 255 102"
			initlabel="bg.greater_equal">
			<description>
				<text>est plus grand ou egale?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="greater_equalP" kind="function" color="255 255 102"
			initlabel="bg.greater_equal">
			<description>
				<text>est plus grand ou egale?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="less_equal" kind="function" color="255 255 102"
			initlabel="bg.less_equal">
			<description>
				<text>est plus petit ou egale?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="less_equalS" kind="function" color="255 255 102"
			initlabel="bg.less_equal">
			<description>
				<text>est plus petit ou egale?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="less_equalP" kind="function" color="255 255 102"
			initlabel="bg.less_equal">
			<description>
				<text>est plus petit ou egale?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not_equal" kind="function" color="255 255 102"
			initlabel="bg.not_equal">
			<description>
				<text>ne son pas egaux?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="number"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not_equalB" kind="function" color="255 255 102"
			initlabel="bg.not_equal">
			<description>
				<text>ne son pas egaux?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="boolean"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="boolean"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not_equalS" kind="function" color="255 255 102"
			initlabel="bg.not_equal">
			<description>
				<text>ne son pas egaux?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="not_equalP" kind="function" color="255 255 102"
			initlabel="bg.not_equal">
			<description>
				<text>ne son pas egaux?</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean"
					connector-kind="plug" position-type="mirror" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
				<BlockConnector connector-type="poly" connector-kind="socket"
					position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<!-- Utility -->
		<BlockGenus name="delay_microseconds" kind="command" color="153 153 153"
			initlabel="bg.delay_microseconds">
			<description>
				<text>pause du programme en microsecondes</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.microseconds">
					<DefaultArg genus-name="number" label="1000" />
				</BlockConnector>
			</BlockConnectors>
			<Images>
				<Image block-location="center">
					<FileLocation>com/unibot/block/dessinChrono.png</FileLocation>
				</Image>
			</Images>
		</BlockGenus>
		<BlockGenus name="random" kind="data" color="153 153 153"
			initlabel="bg.random">
			<description>
				<text>cree un nombre aleatoire inferieur au nombre donnÃ©</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.max">
					<DefaultArg genus-name="number" label="1024" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="millis" kind="data" color="153 153 153"
			initlabel="bg.millis">
			<description>
				<text></text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="boolean-list"
					connector-kind="plug" position-type="mirror" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="serial_println" kind="command" color="153 153 153"
			initlabel="bg.serial_println">
			<description>
				<text>envoie un message sur le port serie</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="string"
					connector-kind="socket">
					<DefaultArg genus-name="string" label="votre message" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="serial_println_number" kind="command"
			color="153 153 153" initlabel="bg.serial_println_number">
			<description>
				<text>envoie un message sur le port serie</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="socket">
					<DefaultArg genus-name="number" label="0.0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="map_common" kind="data" color="153 153 153"
			initlabel="bg.map_common">
			<description>
				<text>etalonne la valeur entre [0, 1023] Ã  [0, 255]</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.value">
					<DefaultArg genus-name="number" label="1" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="map" kind="data" color="153 153 153"
			initlabel="bg.map">
			<description>
				<text>map</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.value" />
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.from">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket">
					<DefaultArg genus-name="number" label="1023" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket" label="bc.to">
					<DefaultArg genus-name="number" label="0" />
				</BlockConnector>
				<BlockConnector connector-type="number"
					connector-kind="socket">
					<DefaultArg genus-name="number" label="255" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="addText" kind="function" initlabel="bg.addText"
			color="153 153 153">
			<description>
				<text>
					ajouter du texte
				</text>
			</description>
			<BlockConnectors>
				<BlockConnector label="" connector-kind="plug"
					connector-type="string-list" position-type="mirror" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="string-list" position-type="bottom" />
				<BlockConnector label="" connector-kind="socket"
					connector-type="string-list" position-type="single" />
			</BlockConnectors>
		</BlockGenus>
		<BlockGenus name="number_to_string" kind="data" color="153 153 153"
			initlabel="bg.map">
			<description>
				<text>change un nombre en texte</text>
			</description>
			<BlockConnectors>
				<BlockConnector connector-type="number"
					connector-kind="plug" />
				<BlockConnector connector-type="string-list"
					connector-kind="socket">
					<DefaultArg genus-name="variable_string" label="0" />
				</BlockConnector>
			</BlockConnectors>
		</BlockGenus>

	</BlockGenuses>

	<BlockFamilies>
		<BlockFamily>
			<FamilyMember>declare_variable_number_int</FamilyMember>
			<FamilyMember>declare_variable_number_float</FamilyMember>
			<FamilyMember>declare_variable_number_long</FamilyMember>
			<FamilyMember>declare_variable_number_double</FamilyMember>
		</BlockFamily>

		<BlockFamily>
			<FamilyMember>and</FamilyMember>
			<FamilyMember>or</FamilyMember>
		</BlockFamily>

		<BlockFamily>
			<FamilyMember>addition</FamilyMember>
			<FamilyMember>subtraction</FamilyMember>
			<FamilyMember>multiplication</FamilyMember>
			<FamilyMember>division</FamilyMember>
			<FamilyMember>modulo</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>min</FamilyMember>
			<FamilyMember>max</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>greater</FamilyMember>
			<FamilyMember>less</FamilyMember>
			<FamilyMember>equal</FamilyMember>
			<FamilyMember>greater_equal</FamilyMember>
			<FamilyMember>less_equal</FamilyMember>
			<FamilyMember>not_equal</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>cast_int</FamilyMember>
			<FamilyMember>cast_float</FamilyMember>
			<FamilyMember>cast_long</FamilyMember>
			<FamilyMember>cast_double</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>equalB</FamilyMember>
			<FamilyMember>not_equalB</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>greaterS</FamilyMember>
			<FamilyMember>lessS</FamilyMember>
			<FamilyMember>equalS</FamilyMember>
			<FamilyMember>greater_equalS</FamilyMember>
			<FamilyMember>less_equalS</FamilyMember>
			<FamilyMember>not_equalS</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>greaterP</FamilyMember>
			<FamilyMember>lessP</FamilyMember>
			<FamilyMember>equalP</FamilyMember>
			<FamilyMember>greater_equalP</FamilyMember>
			<FamilyMember>less_equalP</FamilyMember>
			<FamilyMember>not_equalP</FamilyMember>
		</BlockFamily>
		<BlockFamily>
			<FamilyMember>sin</FamilyMember>
			<FamilyMember>cos</FamilyMember>
			<FamilyMember>tan</FamilyMember>
		</BlockFamily>
		<BlockFamily>

			<FamilyMember>true</FamilyMember>
			<FamilyMember>false</FamilyMember>
		</BlockFamily>

	</BlockFamilies>

	<BlockDrawerSets>
		<BlockDrawerSet name="factory" type="stack" location="northwest"
			window-per-drawer="no" drawer-draggable="no">

			<BlockDrawer button-color="184 0 71" name="bd.loopAndFunction">
				<BlockGenusMember>declareData</BlockGenusMember>
				<BlockGenusMember>setupData</BlockGenusMember>
				<BlockGenusMember>loop</BlockGenusMember>
				<BlockGenusMember>subroutine</BlockGenusMember>
				<BlockGenusMember>subroutine-ref</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="153 102 204" name="bd.variables">
				<BlockGenusMember>declare_variable_digital</BlockGenusMember>
				<BlockGenusMember>declare_variable_number_int</BlockGenusMember>
				<BlockGenusMember>declare_variable_number_float</BlockGenusMember>
				<BlockGenusMember>declare_variable_string</BlockGenusMember>
				<BlockGenusMember>declare_variable_char</BlockGenusMember>
				<BlockGenusMember>declare_variable_byte</BlockGenusMember>
				<BlockGenusMember>declare_variable_number_long</BlockGenusMember>
				<BlockGenusMember>declare_variable_number_double</BlockGenusMember>

				<BlockGenusMember>setter_variable_number</BlockGenusMember>
				<BlockGenusMember>setter_variable_digital</BlockGenusMember>
				<BlockGenusMember>setter_variable_string</BlockGenusMember>
				<BlockGenusMember>setter_variable_char</BlockGenusMember>
				<BlockGenusMember>setter_variable_byte</BlockGenusMember>

				<BlockGenusMember>variable_number</BlockGenusMember>
				<BlockGenusMember>variable_digital</BlockGenusMember>
				<BlockGenusMember>variable_string</BlockGenusMember>
				<BlockGenusMember>variable_char</BlockGenusMember>
				<BlockGenusMember>variable_byte</BlockGenusMember>

				<BlockGenusMember>number</BlockGenusMember>
				<BlockGenusMember>true</BlockGenusMember>
				<BlockGenusMember>false</BlockGenusMember>
				<BlockGenusMember>string</BlockGenusMember>
				<BlockGenusMember>char</BlockGenusMember>
				<BlockGenusMember>byte</BlockGenusMember>

				<BlockGenusMember>cast_int</BlockGenusMember>
				<BlockGenusMember>cast_float</BlockGenusMember>
				<BlockGenusMember>cast_long</BlockGenusMember>
				<BlockGenusMember>cast_double</BlockGenusMember>


			</BlockDrawer>
			<BlockDrawer button-color="255 255 0" name="bd.tests">
				<BlockGenusMember>ifelse</BlockGenusMember>
				<BlockGenusMember>if</BlockGenusMember>
				<BlockGenusMember>while</BlockGenusMember>
				<BlockGenusMember>repeat_times</BlockGenusMember>
				<BlockGenusMember>repeat_delay</BlockGenusMember>
				<BlockGenusMember>equal</BlockGenusMember>
				<BlockGenusMember>equalB</BlockGenusMember>
				<BlockGenusMember>equalS</BlockGenusMember>
				<BlockGenusMember>equalP</BlockGenusMember>
				<!-- <BlockGenusMember>less</BlockGenusMember> <BlockGenusMember>equal</BlockGenusMember> 
					<BlockGenusMember>greater_equal</BlockGenusMember> <BlockGenusMember>less_equal</BlockGenusMember> 
					<BlockGenusMember>not_equal</BlockGenusMember> -->
			</BlockDrawer>
			<BlockDrawer button-color="204 204 204" name="bd.time"
				type="factory">
				<!-- <BlockGenusMember>pause</BlockGenusMember> -->
				<BlockGenusMember>millis</BlockGenusMember>
				<BlockGenusMember>delay</BlockGenusMember>

				<!-- <BlockGenusMember>delay_microseconds</BlockGenusMember> -->
			</BlockDrawer>
			<BlockDrawer button-color="35 255 35" name="bd.operations">

				<BlockGenusMember>and</BlockGenusMember>
				<BlockGenusMember>or</BlockGenusMember>
				<BlockGenusMember>not</BlockGenusMember>
				<BlockGenusMember>addition</BlockGenusMember>
				<BlockGenusMember>subtraction</BlockGenusMember>
				<BlockGenusMember>multiplication</BlockGenusMember>
				<BlockGenusMember>division</BlockGenusMember>
				<BlockGenusMember>modulo</BlockGenusMember>
				<BlockGenusMember>min</BlockGenusMember>
				<BlockGenusMember>max</BlockGenusMember>
				<BlockGenusMember>abs</BlockGenusMember>
				<BlockGenusMember>pow</BlockGenusMember>
				<BlockGenusMember>sqrt</BlockGenusMember>
				<BlockGenusMember>sin</BlockGenusMember>
				<BlockGenusMember>cos</BlockGenusMember>
				<BlockGenusMember>tan</BlockGenusMember>
			</BlockDrawer>
			<BlockDrawer button-color="204 204 204" name="bd.utilities"
				type="factory">
				<BlockGenusMember>random</BlockGenusMember>
				<BlockGenusMember>serial_println</BlockGenusMember>

				<BlockGenusMember>serial_println_number</BlockGenusMember>

				<BlockGenusMember>map_common</BlockGenusMember>

				<BlockGenusMember>map</BlockGenusMember>

				<BlockGenusMember>addText</BlockGenusMember>
				<BlockGenusMember>number_to_string</BlockGenusMember>
			</BlockDrawer>
			<!-- Shapes are automatically loaded as blocks in the Shapes drawer (see 
				slcodeblocks.ShapeBlocksGenerator for details) -->
			<!-- Sound blocks reside in the auto-generated String drawer. (see slcodeblocks.SoundBlocksGenerator 
				for details) -->

		</BlockDrawerSet>
	</BlockDrawerSets>

	<Pages drawer-with-page="yes">
		<Page page-name="unibot" page-width="400" />
		<!-- <Page page-name="Everyone" page-width="400"></Page> <Page page-name="Setup" 
			page-width="400"></Page> <Page page-name="Runtime" page-width="400"></Page> -->
	</Pages>

	<TrashCan>
		<OpenTrashImage>com/unibot/block/trash_open.png</OpenTrashImage>
		<ClosedTrashImage>com/unibot/block/trash.png</ClosedTrashImage>
	</TrashCan>

</BlockLangDef>
